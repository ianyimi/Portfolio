/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, {useRef} from 'react'
import {useGLTF} from '@react-three/drei'
import {GLTF} from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Ethereum: THREE.Mesh
  }
  materials: {
    ['(null)']: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://dqeczc7c9n9n1.cloudfront.net/models/eth-1663535083/eth.glb.gz";

export default function Model(props: { color: string } & JSX.IntrinsicElements['group']) {
  const {color} = props;
  const group = useRef<THREE.Group>()
  const {nodes, materials} = useGLTF(FILE_URL) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" position-y={2} rotation-y={Math.random() * Math.PI}>
        <mesh
          name="Ethereum"
          geometry={nodes.Ethereum.geometry}
          rotation={[Math.PI / 2, 0, 0]}
        >
          <meshStandardMaterial color={color}/>
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
