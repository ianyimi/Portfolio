/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, {useEffect, useRef, useState} from 'react'
import {useGLTF} from '@react-three/drei'
import {GLTF} from 'three/examples/jsm/loaders/GLTFLoader'
import {useStore} from "@/utils/store";

type GLTFResult = GLTF & {
  nodes: {
    Brasuka_LOW: THREE.Mesh
  }
  materials: {
    Brasuka: THREE.MeshStandardMaterial
  }
}

const FILE_URL = "https://dqeczc7c9n9n1.cloudfront.net/models/brazuca-1663535171/brazuca.glb.gz";

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  
  const {objectQueued, objectRendered} = useStore(state => ({
    objectQueued: state.objectQueued,
    objectRendered: state.objectRendered
  }))
  objectQueued("brazuca");
  
  const {nodes, materials} = useGLTF(FILE_URL) as GLTFResult
  
  useEffect(() => {
    
    objectRendered("brazuca")
    
  }, [nodes]);
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" position-y={4} rotation-x={Math.random() * Math.PI}>
        <mesh
          name="Brasuka_LOW"
          geometry={nodes.Brasuka_LOW.geometry}
          material={materials.Brasuka}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  )
}

useGLTF.preload(FILE_URL)
